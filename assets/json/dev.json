[{
    "title": "Sync",
    "uri": "javascript:(function(cache) { var check = confirm('Enter Synchronous Interface?'); if (check === false) { return false; }  else { var input = prompt('running Query, type help for info or exit to quit\n >>'); while (input !== 'exit') {  if (input === 'script') { loadScript(); }   else if (input === 'iframe') { loadIframe(); }   else if (input === 'repl') { runRepl(); }   else if (input === 'help') { alert( 'Commands : \\n' +  'add    : add an item to cache.\\n' + 'save   : not setupt yet. serialize the cache and store or send\\n' +  'delete : remove an item from storage\\n' +  'list   : list items in storage\\n' +  'iframe : render an iframe into the Document Body\\n' +  'script : inject a script into the Document Body\\n' +  'repl   : run javascript evaluation mode\\n' ) }   else if (input === 'add') { addData(); }   else if (input === 'delete') { deleteData(); }   else if (input === 'list') { listData(); }  var input = prompt('running Query, type help for info or exit to quit\n >>'); } function loadScript() { var src = prompt('file name ?'); var script = document.createElement('script'); script.src = 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1674766/' + src + '.js'; script.type = 'text/javascript'; return document.body.appendChild(script); } function loadIframe() { var src = prompt('path ?'); var iframe = document.createElement('iframe'); iframe.style.width = '80vw'; iframe.style.height = '75vh'; iframe.src = src; return document.body.appendChild(iframe); } function runRepl() { var io = prompt('js>, exit to quit \n >'); while (io !== 'exit') { var result; try { result = eval(io); } catch (er) { result = er.stack; } finally { alert(result); } io = prompt('js>, exit to quit \n >'); } } function addData() { var item = prompt('Enter an item to the cache!'); cache.push(item);  } function deleteData() { var index = prompt('Enter index number to delete!'); cache.splice(index, 1); listData(); } function listData() { var i, len = cache.length, output = ''; for(i = 0;i < len;i++){ output += cache[i] + '\n'; } alert(output); } } } )([]);",
    "description": "",
    "date": 1602217496965,
    "time": "21:24:56:966",
    "uid": "65d58e3e-3127-7cae-ac86-5bec5423163c",
    "id": 1
  },
  {
    "title": "View JavaScript",
    "uri": "javascript:(function(){s=document.getElementsByTagName('SCRIPT');d=window.open().document;/*140681*/d.open();d.close();b=d.body;function trim(s){return s.replace(/^\\s*\\n/,'').replace(/\\s*$/,'');};function add(h){b.appendChild(h);}function makeTag(t){return d.createElement(t);}function makeText(tag,text){t=makeTag(tag);t.appendChild(d.createTextNode(text));return t;}add(makeText('style','iframe{width:100%;height:18em;border:1px solid;'));add(makeText('h3',d.title='Scripts in '+location.href));for(i=0;i<s.length;++i){if(s[i].src){add(makeText('h4','script src=%22'+s[i].src+'%22'));iframe=makeTag('iframe');iframe.src=s[i].src;add(iframe);}else{add(makeText('h4','Inline script'));add(makeText('pre',trim(s[i].innerHTML)));}}void 0})()",
    "description": "Opens a window with all scripts connected to that page embbed into readable frames.",
    "source" : "https://github.com/Autoraidapi/bookmarklets/blob/0b6af8ab8b057e14f457c4a72ef355960c6d8933/assets/js/lib/developer/view-javascript.js#L1",
    "date": 1601024729364,
    "uid": "7b62f512-0d96-7d3a-282b-6ac34dc6ed20",
    "id": 2
  },
  {
    "title": "View Variables",
    "uri": "javascript:(function()%7B%20var%20x%2C%20d%2C%20i%2C%20v%2C%20st%3B%20x%20%3D%20open()%3B%20d%20%3D%20x.document%3B%20d.open()%3B%20function%20hE(s)%20%7B%20s%20%3D%20s.replace(%2F%5C%5C%22%2Fg%2C%20'%22')%20.replace(%2F%26%2Fg%2C%20'%26amp%3B')%20.replace(%2F%22%2Fg%2C%20'%26quot%3B')%20.replace(%2F'%2Fg%2C%20'%26%2339%3B')%20.replace(%2F%3C%2Fg%2C%20'%26lt%3B')%20.replace(%2F%3E%2Fg%2C%20'%26gt%3B')%3B%20return%20s%3B%20%7D%20%20d.write(%20%22%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3Cstyle%3Etd%7Bvertical-align%3Atop%3B%20white-space%3Apre%3B%20%7D%20table%2Ctd%2Cth%20%7B%20font-family%3A%20monospace%3B%20padding%3A3px%3B%20margin%3A%20auto%3B%20border-radius%3A2px%3B%20border%3A%201px%20solid%20rgba(0%2C0%2C0%2C0.15)%3B%20%7D%20div.er%20%7B%20color%3Ared%20%7D%3C%2Fstyle%3E%3C%2Fhead%3E%3Cbody%3E%3Ctable%20border%3D1%3E%3Cthead%3E%3Ctr%3E%3Cth%3EVariable%3C%2Fth%3E%3Cth%3EType%3C%2Fth%3E%3Cth%3EValue%20as%20string%3C%2Fth%3E%3C%2Ftr%3E%3C%2Fthead%3E%22%20)%3B%20%20for%20(i%20in%20window)%20%7B%20%20if%20(!(i%20in%20x))%20%7B%20v%20%3D%20window%5Bi%5D%3B%20d.write(%20%22%3Ctr%3E%3Ctd%3E%22%20%2B%20hE(i)%20%2B%20%22%3C%2Ftd%3E%3Ctd%3E%22%20%2B%20hE(typeof%20window%5Bi%5D)%20%2B%20%22%3C%2Ftd%3E%3Ctd%3E%22%20)%3B%20if%20(v%20%3D%3D%3D%20null)%20d.write(%22null%22)%3B%20else%20if%20(v%20%3D%3D%3D%20undefined)%20d.write(%22undefined%22)%3B%20else%20try%20%7B%20st%20%3D%20v.toString()%3B%20if%20(st.length)%20d.write(hE(v.toString()))%3B%20else%20d.write(%22%20%22)%3B%20%7D%20catch%20(er)%20%7B%20d.write(%22%3Cdiv%20class%3Der%3E%22%20%2B%20hE(er.toString())%20%2B%20%22%3C%2Fdiv%3E%22)%3B%20%7D%20d.write(%22%3C%2Fpre%3E%3C%2Ftd%3E%3C%2Ftr%3E%22)%3B%20%7D%20%7D%20%20d.write(%22%3C%2Ftable%3E%3C%2Fbody%3E%3C%2Fhtml%3E%22)%3B%20d.close()%3B%20%7D)()%3B%20%20",
    "description": "Lookup all global variables not native to the window and writes them to a table in a new window.",
    "source":"https://github.com/Autoraidapi/bookmarklets/blob/93b1475693ddd6410345e9ae2915b1cdd8ff3228/assets/js/lib/developer/view-variables.js#L5",
    "date": 1601046176513,
    "time": "08:02:56:513",
    "uid": "8f15ad8f-d562-c749-b4dc-f57de4812f96",
    "id": 3
  },
  {
    "title": "JS Shell",
    "uri": "javascript:with(window.open(%22%22,%22_blank%22,%22width=%22+screen.width*.6+%22,left=%22+screen.width*.35+%22,height=%22+screen.height*.9+%22,resizable,scrollbars=yes%22)){document.write(%22<!DOCTYPE HTML PUBLIC \\%22-//W3C//DTD HTML 4.01//EN\\%22 \\%22http://www.w3.org/TR/html4/strict.dtd\\%22>\\n\\n<html onclick=\\%22keepFocusInTextbox(event)\\%22>\\n<head>\\n<meta http-equiv=\\%22Content-Type\\%22 content=\\%22text/html; charset=iso-8859-1\\%22>\\n<title>JavaScript Shell 1.4</title>\\n\\n<script type=\\%22text/javascript\\%22>\\nvar \\nhistList = [\\%22\\%22], \\nhistPos = 0, \\n_scope = {}, \\n_win, // a top-level context\\nquestion,\\n_in,\\n_out,\\ntooManyMatches = null,\\nlastError = null;\\n\\nfunction refocus()\\n{\\n  _in.blur(); // Needed for Mozilla to scroll correctly.\\n  _in.focus();\\n}\\n\\nfunction init()\\n{\\n  _in = document.getElementById(\\%22input\\%22);\\n  _out = document.getElementById(\\%22output\\%22);\\n\\n  _win = window;\\n\\n  if (opener && !opener.closed)\\n  {\\n    println(\\%22Using bookmarklet version of shell: commands will run in opener's context.\\%22, \\%22message\\%22);\\n    _win = opener;\\n  }\\n\\n  initTarget();\\n\\n  recalculateInputHeight();\\n  refocus();\\n}\\n\\nfunction initTarget()\\n{\\n  _win.Shell = window;\\n  _win.print = shellCommands.print;\\n}\\n\\n\\n// Unless the user is selected something, refocus the textbox.\\n// (requested by caillon, brendan, asa)\\nfunction keepFocusInTextbox(e) \\n{\\n  var g = e.srcElement ? e.srcElement : e.target; // IE vs. standard\\n  \\n  while (!g.tagName)\\n    g = g.parentNode;\\n  var t = g.tagName.toUpperCase();\\n  if (t==\\%22A\\%22 || t==\\%22INPUT\\%22)\\n    return;\\n    \\n  if (window.getSelection) {\\n    // Mozilla\\n    if (String(window.getSelection()))\\n      return;\\n  }\\n  else if (document.getSelection) {\\n    // Opera? Netscape 4?\\n    if (document.getSelection())\\n      return;\\n  }\\n  else {\\n    // IE\\n    if ( document.selection.createRange().text )\\n      return;\\n  }\\n  \\n  refocus();\\n}\\n\\nfunction inputKeydown(e) {\\n  // Use onkeydown because IE doesn't support onkeypress for arrow keys\\n\\n  //alert(e.keyCode + \\%22 ^ \\%22 + e.keycode);\\n\\n  if (e.shiftKey && e.keyCode == 13) { // shift-enter\\n    // don't do anything; allow the shift-enter to insert a line break as normal\\n  } else if (e.keyCode == 13) { // enter\\n    // execute the input on enter\\n    try { go(); } catch(er) { alert(er); };\\n    setTimeout(function() { _in.value = \\%22\\%22; }, 0); // can't preventDefault on input, so clear it later\\n  } else if (e.keyCode == 38) { // up\\n    // go up in history if at top or ctrl-up\\n    if (e.ctrlKey || caretInFirstLine(_in))\\n      hist(true);\\n  } else if (e.keyCode == 40) { // down\\n    // go down in history if at end or ctrl-down\\n    if (e.ctrlKey || caretInLastLine(_in))\\n      hist(false);\\n  } else if (e.keyCode == 9) { // tab\\n    tabcomplete();\\n    setTimeout(function() { refocus(); }, 0); // refocus because tab was hit\\n  } else { }\\n\\n  setTimeout(recalculateInputHeight, 0);\\n  \\n  //return true;\\n};\\n\\nfunction caretInFirstLine(textbox)\\n{\\n  // IE doesn't support selectionStart/selectionEnd\\n  if (textbox.selectionStart == undefined)\\n    return true;\\n\\n  var firstLineBreak = textbox.value.indexOf(\\%22\\\\n\\%22);\\n  \\n  return ((firstLineBreak == -1) || (textbox.selectionStart <= firstLineBreak));\\n}\\n\\nfunction caretInLastLine(textbox)\\n{\\n  // IE doesn't support selectionStart/selectionEnd\\n  if (textbox.selectionEnd == undefined)\\n    return true;\\n\\n  var lastLineBreak = textbox.value.lastIndexOf(\\%22\\\\n\\%22);\\n  \\n  return (textbox.selectionEnd > lastLineBreak);\\n}\\n\\nfunction recalculateInputHeight()\\n{\\n  var rows = _in.value.split(/\\\\n/).length\\n    + 1 // prevent scrollbar flickering in Mozilla\\n    + (window.opera ? 1 : 0); // leave room for scrollbar in Opera\\n  \\n  if (_in.rows != rows) // without this check, it is impossible to select text in Opera 7.60 or Opera 8.0.\\n    _in.rows = rows;\\n}\\n\\nfunction println(s, type)\\n{\\n  if((s=String(s)))\\n  {\\n    var newdiv = document.createElement(\\%22div\\%22);\\n    newdiv.appendChild(document.createTextNode(s));\\n    newdiv.className = type;\\n    _out.appendChild(newdiv);\\n    return newdiv;\\n  }\\n}\\n\\nfunction printWithRunin(h, s, type)\\n{\\n  var div = println(s, type);\\n  var head = document.createElement(\\%22strong\\%22);\\n  head.appendChild(document.createTextNode(h + \\%22: \\%22));\\n  div.insertBefore(head, div.firstChild);\\n}\\n\\n\\nvar shellCommands = \\n{\\nload : function load(url)\\n{\\n  var s = _win.document.createElement(\\%22script\\%22);\\n  s.type = \\%22text/javascript\\%22;\\n  s.src = url;\\n  _win.document.getElementsByTagName(\\%22head\\%22)[0].appendChild(s);\\n  println(\\%22Loading \\%22 + url + \\%22...\\%22, \\%22message\\%22);\\n},\\n\\nclear : function clear()\\n{\\n  var CHILDREN_TO_PRESERVE = 3;\\n  while (_out.childNodes[CHILDREN_TO_PRESERVE]) \\n    _out.removeChild(_out.childNodes[CHILDREN_TO_PRESERVE]);\\n},\\n\\nprint : function print(s) { println(s, \\%22print\\%22); },\\n\\n// the normal function, \\%22print\\%22, shouldn't return a value\\n// (suggested by brendan; later noticed it was a problem when showing others)\\npr : function pr(s) \\n{ \\n  shellCommands.print(s); // need to specify shellCommands so it doesn't try window.print()!\\n  return s;\\n},\\n\\nprops : function props(e, onePerLine)\\n{\\n  if (e === null) {\\n    println(\\%22props called with null argument\\%22, \\%22error\\%22);\\n    return;\\n  }\\n\\n  if (e === undefined) {\\n    println(\\%22props called with undefined argument\\%22, \\%22error\\%22);\\n    return;\\n  }\\n\\n  var ns = [\\%22Methods\\%22, \\%22Fields\\%22, \\%22Unreachables\\%22];\\n  var as = [[], [], []]; // array of (empty) arrays of arrays!\\n  var p, j, i; // loop variables, several used multiple times\\n\\n  var protoLevels = 0;\\n\\n  for (p = e; p; p = p.__proto__)\\n  {\\n    for (i=0; i<ns.length; ++i)\\n      as[i][protoLevels] = [];\\n    ++protoLevels;\\n  }\\n\\n  for(var a in e)\\n  {\\n    // Shortcoming: doesn't check that VALUES are the same in object and prototype.\\n\\n    var protoLevel = -1;\\n    try\\n    {\\n      for (p = e; p && (a in p); p = p.__proto__)\\n        ++protoLevel;\\n    }\\n    catch(er) { protoLevel = 0; } // \\%22in\\%22 operator throws when param to props() is a string\\n\\n    var type = 1;\\n    try\\n    {\\n      if ((typeof e[a]) == \\%22function\\%22)\\n        type = 0;\\n    }\\n    catch (er) { type = 2; }\\n\\n    as[type][protoLevel].push(a);\\n  }\\n\\n  function times(s, n) { return n ? s + times(s, n-1) : \\%22\\%22; }\\n\\n  for (j=0; j<protoLevels; ++j)\\n    for (i=0;i<ns.length;++i)\\n      if (as[i][j].length) \\n        printWithRunin(\\n          ns[i] + times(\\%22 of prototype\\%22, j), \\n          (onePerLine ? \\%22\\\\n\\\\n\\%22 : \\%22\\%22) + as[i][j].sort().join(onePerLine ? \\%22\\\\n\\%22 : \\%22, \\%22) + (onePerLine ? \\%22\\\\n\\\\n\\%22 : \\%22\\%22), \\n          \\%22propList\\%22\\n        );\\n},\\n\\nblink : function blink(node)\\n{\\n  if (!node)                     throw(\\%22blink: argument is null or undefined.\\%22);\\n  if (node.nodeType == null)     throw(\\%22blink: argument must be a node.\\%22);\\n  if (node.nodeType == 3)        throw(\\%22blink: argument must not be a text node\\%22);\\n  if (node.documentElement)      throw(\\%22blink: argument must not be the document object\\%22);\\n\\n  function setOutline(o) { \\n    return function() {\\n      if (node.style.outline != node.style.bogusProperty) {\\n        // browser supports outline (Firefox 1.1 and newer, CSS3, Opera 8).\\n        node.style.outline = o;\\n      }\\n      else if (node.style.MozOutline != node.style.bogusProperty) {\\n        // browser supports MozOutline (Firefox 1.0.x and older)\\n        node.style.MozOutline = o;\\n      }\\n      else {\\n        // browser only supports border (IE). border is a fallback because it moves things around.\\n        node.style.border = o;\\n      }\\n    }\\n  } \\n  \\n  function focusIt(a) {\\n    return function() {\\n      a.focus(); \\n    }\\n  }\\n\\n  if (node.ownerDocument) {\\n    var windowToFocusNow = (node.ownerDocument.defaultView || node.ownerDocument.parentWindow); // Moz vs. IE\\n    if (windowToFocusNow)\\n      setTimeout(focusIt(windowToFocusNow.top), 0);\\n  }\\n\\n  for(var i=1;i<7;++i)\\n    setTimeout(setOutline((i%252)?'3px solid red':'none'), i*100);\\n\\n  setTimeout(focusIt(window), 800);\\n  setTimeout(focusIt(_in), 810);\\n},\\n\\nscope : function scope(sc)\\n{\\n  if (!sc) sc = {};\\n  _scope = sc;\\n  println(\\%22Scope is now \\%22 + sc + \\%22.  If a variable is not found in this scope, window will also be searched.  New variables will still go on window.\\%22, \\%22message\\%22);\\n},\\n\\nmathHelp : function mathHelp()\\n{\\n  printWithRunin(\\%22Math constants\\%22, \\%22E, LN2, LN10, LOG2E, LOG10E, PI, SQRT1_2, SQRT2\\%22, \\%22propList\\%22);\\n  printWithRunin(\\%22Math methods\\%22, \\%22abs, acos, asin, atan, atan2, ceil, cos, exp, floor, log, max, min, pow, random, round, sin, sqrt, tan\\%22, \\%22propList\\%22);\\n},\\n\\nans : undefined\\n};\\n\\n\\nfunction hist(up)\\n{\\n  // histList[0] = first command entered, [1] = second, etc.\\n  // type something, press up --> thing typed is now in \\%22limbo\\%22\\n  // (last item in histList) and should be reachable by pressing \\n  // down again.\\n\\n  var L = histList.length;\\n\\n  if (L == 1)\\n    return;\\n\\n  if (up)\\n  {\\n    if (histPos == L-1)\\n    {\\n      // Save this entry in case the user hits the down key.\\n      histList[histPos] = _in.value;\\n    }\\n\\n    if (histPos > 0)\\n    {\\n      histPos--;\\n      // Use a timeout to prevent up from moving cursor within new text\\n      // Set to nothing first for the same reason\\n      setTimeout(\\n        function() {\\n          _in.value = ''; \\n          _in.value = histList[histPos];\\n          var caretPos = _in.value.length;\\n          if (_in.setSelectionRange) \\n            _in.setSelectionRange(caretPos, caretPos);\\n        },\\n        0\\n      );\\n    }\\n  } \\n  else // down\\n  {\\n    if (histPos < L-1)\\n    {\\n      histPos++;\\n      _in.value = histList[histPos];\\n    }\\n    else if (histPos == L-1)\\n    {\\n      // Already on the current entry: clear but save\\n      if (_in.value)\\n      {\\n        histList[histPos] = _in.value;\\n        ++histPos;\\n        _in.value = \\%22\\%22;\\n      }\\n    }\\n  }\\n}\\n\\nfunction tabcomplete()\\n{\\n  /*\\n   * Working backwards from s[from], find the spot\\n   * where this expression starts.  It will scan\\n   * until it hits a mismatched ( or a space,\\n   * but it skips over quoted strings.\\n   * If stopAtDot is true, stop at a '.'\\n   */\\n  function findbeginning(s, from, stopAtDot)\\n  {\\n    /*\\n     *  Complicated function.\\n     *\\n     *  Return true if s[i] == q BUT ONLY IF\\n     *  s[i-1] is not a backslash.\\n     */\\n    function equalButNotEscaped(s,i,q)\\n    {\\n      if(s.charAt(i) != q) // not equal go no further\\n        return false;\\n\\n      if(i==0) // beginning of string\\n        return true;\\n\\n      if(s.charAt(i-1) == '\\\\\\\\') // escaped?\\n        return false;\\n\\n      return true;\\n    }\\n\\n    var nparens = 0;\\n    var i;\\n    for(i=from; i>=0; i--)\\n    {\\n      if(s.charAt(i) == ' ')\\n        break;\\n\\n      if(stopAtDot && s.charAt(i) == '.')\\n        break;\\n        \\n      if(s.charAt(i) == ')')\\n        nparens++;\\n      else if(s.charAt(i) == '(')\\n        nparens--;\\n\\n      if(nparens < 0)\\n        break;\\n\\n      // skip quoted strings\\n      if(s.charAt(i) == '\\\\'' || s.charAt(i) == '\\\\\\%22')\\n      {\\n        //dump(\\%22skipping quoted chars: \\%22);\\n        var quot = s.charAt(i);\\n        i--;\\n        while(i >= 0 && !equalButNotEscaped(s,i,quot)) {\\n          //dump(s.charAt(i));\\n          i--;\\n        }\\n        //dump(\\%22\\\\n\\%22);\\n      }\\n    }\\n    return i;\\n  }\\n\\n  // XXX should be used more consistently (instead of using selectionStart/selectionEnd throughout code)\\n  // XXX doesn't work in IE, even though it contains IE-specific code\\n  function getcaretpos(inp)\\n  {\\n    if(inp.selectionEnd != null)\\n      return inp.selectionEnd;\\n      \\n    if(inp.createTextRange)\\n    {\\n      var docrange = _win.Shell.document.selection.createRange();\\n      var inprange = inp.createTextRange();\\n      if (inprange.setEndPoint)\\n      {\\n        inprange.setEndPoint('EndToStart', docrange);\\n        return inprange.text.length;\\n      }\\n    }\\n\\n    return inp.value.length; // sucks, punt\\n  }\\n\\n  function setselectionto(inp,pos)\\n  {\\n    if(inp.selectionStart) {\\n      inp.selectionStart = inp.selectionEnd = pos;\\n    }\\n    else if(inp.createTextRange) {\\n      var docrange = _win.Shell.document.selection.createRange();\\n      var inprange = inp.createTextRange();\\n      inprange.move('character',pos);\\n      inprange.select();\\n    }\\n    else { // err...\\n    /*\\n      inp.select();\\n      if(_win.Shell.document.getSelection())\\n        _win.Shell.document.getSelection() = \\%22\\%22;\\n        */\\n    }\\n  }\\n    // get position of cursor within the input box\\n    var caret = getcaretpos(_in);\\n\\n    if(caret) {\\n      //dump(\\%22----\\\\n\\%22);\\n      var dotpos, spacepos, complete, obj;\\n      //dump(\\%22caret pos: \\%22 + caret + \\%22\\\\n\\%22);\\n      // see if there's a dot before here\\n      dotpos = findbeginning(_in.value, caret-1, true);\\n      //dump(\\%22dot pos: \\%22 + dotpos + \\%22\\\\n\\%22);\\n      if(dotpos == -1 || _in.value.charAt(dotpos) != '.') {\\n        dotpos = caret;\\n//dump(\\%22changed dot pos: \\%22 + dotpos + \\%22\\\\n\\%22);\\n      }\\n\\n      // look backwards for a non-variable-name character\\n      spacepos = findbeginning(_in.value, dotpos-1, false);\\n      //dump(\\%22space pos: \\%22 + spacepos + \\%22\\\\n\\%22);\\n      // get the object we're trying to complete on\\n      if(spacepos == dotpos || spacepos+1 == dotpos || dotpos == caret)\\n      {\\n        // try completing function args\\n        if(_in.value.charAt(dotpos) == '(' ||\\n (_in.value.charAt(spacepos) == '(' && (spacepos+1) == dotpos))\\n        {\\n          var fn,fname;\\n  var from = (_in.value.charAt(dotpos) == '(') ? dotpos : spacepos;\\n          spacepos = findbeginning(_in.value, from-1, false);\\n\\n          fname = _in.value.substr(spacepos+1,from-(spacepos+1));\\n  //dump(\\%22fname: \\%22 + fname + \\%22\\\\n\\%22);\\n          try {\\n            with(_win.Shell._scope)\\n              with(_win)\\n                with(Shell.shellCommands)\\n                  fn = eval(fname);\\n          }\\n          catch(er) {\\n            //dump('fn is not a valid object\\\\n');\\n            return;\\n          }\\n          if(fn == undefined) {\\n             //dump('fn is undefined');\\n             return;\\n          }\\n          if(fn instanceof Function)\\n          {\\n            // Print function definition, including argument names, but not function body\\n            if(!fn.toString().match(/function .+?\\\\(\\\\) +\\\\{\\\\n +\\\\[native code\\\\]\\\\n\\\\}/))\\n              println(fn.toString().match(/function .+?\\\\(.*?\\\\)/), \\%22tabcomplete\\%22);\\n          }\\n\\n          return;\\n        }\\n        else\\n          obj = _win;\\n      }\\n      else\\n      {\\n        var objname = _in.value.substr(spacepos+1,dotpos-(spacepos+1));\\n        //dump(\\%22objname: |\\%22 + objname + \\%22|\\\\n\\%22);\\n        try {\\n          with(_win.Shell._scope)\\n            with(_win)\\n                obj = eval(objname);\\n        }\\n        catch(er) {\\n          printError(er); \\n          return;\\n        }\\n        if(obj == undefined) {\\n          // sometimes this is tabcomplete's fault, so don't print it :(\\n          // e.g. completing from \\%22print(document.getElements\\%22\\n          // println(\\%22Can't complete from null or undefined expression \\%22 + objname, \\%22error\\%22);\\n          return;\\n        }\\n      }\\n      //dump(\\%22obj: \\%22 + obj + \\%22\\\\n\\%22);\\n      // get the thing we're trying to complete\\n      if(dotpos == caret)\\n      {\\n        if(spacepos+1 == dotpos || spacepos == dotpos)\\n        {\\n          // nothing to complete\\n          //dump(\\%22nothing to complete\\\\n\\%22);\\n          return;\\n        }\\n\\n        complete = _in.value.substr(spacepos+1,dotpos-(spacepos+1));\\n      }\\n      else {\\n        complete = _in.value.substr(dotpos+1,caret-(dotpos+1));\\n      }\\n      //dump(\\%22complete: \\%22 + complete + \\%22\\\\n\\%22);\\n      // ok, now look at all the props/methods of this obj\\n      // and find ones starting with 'complete'\\n      var matches = [];\\n      var bestmatch = null;\\n      for(var a in obj)\\n      {\\n        //a = a.toString();\\n        //XXX: making it lowercase could help some cases,\\n        // but screws up my general logic.\\n        if(a.substr(0,complete.length) == complete) {\\n          matches.push(a);\\n          ////dump(\\%22match: \\%22 + a + \\%22\\\\n\\%22);\\n          // if no best match, this is the best match\\n          if(bestmatch == null)\\n          {\\n            bestmatch = a;\\n          }\\n          else {\\n            // the best match is the longest common string\\n            function min(a,b){ return ((a<b)?a:b); }\\n            var i;\\n            for(i=0; i< min(bestmatch.length, a.length); i++)\\n            {\\n              if(bestmatch.charAt(i) != a.charAt(i))\\n                break;\\n            }\\n            bestmatch = bestmatch.substr(0,i);\\n            ////dump(\\%22bestmatch len: \\%22 + i + \\%22\\\\n\\%22);\\n          }\\n          ////dump(\\%22bestmatch: \\%22 + bestmatch + \\%22\\\\n\\%22);\\n        }\\n      }\\n      bestmatch = (bestmatch || \\%22\\%22);\\n      ////dump(\\%22matches: \\%22 + matches + \\%22\\\\n\\%22);\\n      var objAndComplete = (objname || obj) + \\%22.\\%22 + bestmatch;\\n      //dump(\\%22matches.length: \\%22 + matches.length + \\%22, tooManyMatches: \\%22 + tooManyMatches + \\%22, objAndComplete: \\%22 + objAndComplete + \\%22\\\\n\\%22);\\n      if(matches.length > 1 && (tooManyMatches == objAndComplete || matches.length <= 10)) {\\n\\n        printWithRunin(\\%22Matches: \\%22, matches.join(', '), \\%22tabcomplete\\%22);\\n        tooManyMatches = null;\\n      }\\n      else if(matches.length > 10)\\n      {\\n        println(matches.length + \\%22 matches.  Press tab again to see them all\\%22, \\%22tabcomplete\\%22);\\n        tooManyMatches = objAndComplete;\\n      }\\n      else {\\n        tooManyMatches = null;\\n      }\\n      if(bestmatch != \\%22\\%22)\\n      {\\n        var sstart;\\n        if(dotpos == caret) {\\n          sstart = spacepos+1;\\n        }\\n        else {\\n          sstart = dotpos+1;\\n        }\\n        _in.value = _in.value.substr(0, sstart)\\n                  + bestmatch\\n                  + _in.value.substr(caret);\\n        setselectionto(_in,caret + (bestmatch.length - complete.length));\\n      }\\n    }\\n}\\n\\nfunction printQuestion(q)\\n{\\n  println(q, \\%22input\\%22);\\n}\\n\\nfunction printAnswer(a)\\n{\\n  if (a !== undefined) {\\n    println(a, \\%22normalOutput\\%22);\\n    shellCommands.ans = a;\\n  }\\n}\\n\\nfunction printError(er)\\n{ \\n  var lineNumberString;\\n\\n  lastError = er; // for debugging the shell\\n  if (er.name)\\n  {\\n    // lineNumberString should not be \\%22\\%22, to avoid a very wacky bug in IE 6.\\n    lineNumberString = (er.lineNumber != undefined) ? (\\%22 on line \\%22 + er.lineNumber + \\%22: \\%22) : \\%22: \\%22;\\n    println(er.name + lineNumberString + er.message, \\%22error\\%22); // Because IE doesn't have error.toString.\\n  }\\n  else\\n    println(er, \\%22error\\%22); // Because security errors in Moz /only/ have toString.\\n}\\n\\nfunction go(s)\\n{\\n  _in.value = question = s ? s : _in.value;\\n\\n  if (question == \\%22\\%22)\\n    return;\\n\\n  histList[histList.length-1] = question;\\n  histList[histList.length] = \\%22\\%22;\\n  histPos = histList.length - 1;\\n  \\n  // Unfortunately, this has to happen *before* the JavaScript is run, so that \\n  // print() output will go in the right place.\\n  _in.value='';\\n  recalculateInputHeight();\\n  printQuestion(question);\\n\\n  if (_win.closed) {\\n    printError(\\%22Target window has been closed.\\%22);\\n    return;\\n  }\\n  \\n  try { (\\%22Shell\\%22 in _win) }\\n  catch(er) {\\n    printError(\\%22The JavaScript Shell cannot access variables in the target window.  The most likely reason is that the target window now has a different page loaded and that page has a different hostname than the original page.\\%22);\\n    return;\\n  }\\n\\n  if (!(\\%22Shell\\%22 in _win))\\n    initTarget(); // silent\\n\\n  // Evaluate Shell.question using _win's eval (this is why eval isn't in the |with|, IIRC).\\n  _win.location.href = \\%22javascript:try{ Shell.printAnswer(eval('with(Shell._scope) with(Shell.shellCommands) {' + Shell.question + String.fromCharCode(10) + '}')); } catch(er) { Shell.printError(er); }; setTimeout(Shell.refocus, 0); void 0\\%22;\\n}\\n\\n</script>\\n\\n<!-- for http://ted.mielczarek.org/code/mozilla/extensiondev/ -->\\n<script type=\\%22text/javascript\\%22 src=\\%22chrome://extensiondev/content/rdfhistory.js\\%22></script>\\n<script type=\\%22text/javascript\\%22 src=\\%22chrome://extensiondev/content/chromeShellExtras.js\\%22></script>\\n\\n<style type=\\%22text/css\\%22>\\nbody { background: white; color: black; }\\n\\n#output%20{%20white-space:%20pre;%20white-space:%20-moz-pre-wrap;%20}%20/*%20Preserve%20line%20breaks,%20but%20wrap%20too%20if%20browser%20supports%20it%20*/\\nh3%20{%20margin-top:%200;%20margin-bottom:%200em;%20}\\nh3%20+%20div%20{%20margin:%200;%20}\\n\\nform%20{%20margin:%200;%20padding:%200;%20}\\n#input%20{%20width:%20100%25;%20border:%20none;%20padding:%200;%20overflow:%20auto;%20}\\n\\n.input%20{%20color:%20blue;%20background:%20white;%20font:%20inherit;%20font-weight:%20bold;%20margin-top:%20.5em;%20/*%20background:%20#E6E6FF;%20*/%20}\\n.normalOutput%20{%20color:%20black;%20background:%20white;%20}\\n.print%20{%20color:%20brown;%20background:%20white;%20}\\n.error%20{%20color:%20red;%20background:%20white;%20}\\n.propList%20{%20color:%20green;%20background:%20white;%20}\\n.message%20{%20color:%20green;%20background:%20white;%20}\\n.tabcomplete%20{%20color:%20purple;%20background:%20white;%20}\\n</style>\\n</head>\\n\\n<body%20onload=\\%22init()\\%22>\\n\\n<div%20id=\\%22output\\%22><h3>JavaScript%20Shell%201.4</h3><div>Features:%20autocompletion%20of%20property%20names%20with%20Tab,%20multiline%20input%20with%20Shift+Enter,%20input%20history%20with%20(Ctrl+)%20Up/Down,%20<a%20accesskey=\\%22M\\%22%20href=\\%22javascript:go('scope(Math);%20mathHelp();');\\%22%20title=\\%22Accesskey:%20M\\%22>Math</a>,%20<a%20accesskey=\\%22H\\%22%20href=\\%22http://www.squarefree.com/shell/?ignoreReferrerFrom=shell1.4\\%22%20%20title=\\%22Accesskey:%20H\\%22>help</a></div><div>Values%20and%20functions:%20ans,%20print(string),%20<a%20accesskey=\\%22P\\%22%20href=\\%22javascript:go('props(ans)')\\%22%20title=\\%22Accesskey:%20P\\%22>props(object)</a>,%20<a%20accesskey=\\%22B\\%22%20href=\\%22javascript:go('blink(ans)')\\%22%20title=\\%22Accesskey:%20B\\%22>blink(node)</a>,%20<a%20accesskey=\\%22C\\%22%20href=\\%22javascript:go('clear()')\\%22%20title=\\%22Accesskey:%20C\\%22>clear()</a>,%20load(scriptURL),%20scope(object)</div></div>\\n\\n<div><textarea%20id=\\%22input\\%22%20class=\\%22input\\%22%20wrap=\\%22off\\%22%20onkeydown=\\%22inputKeydown(event)\\%22%20rows=\\%221\\%22></textarea></div>\\n\\n</body>\\n\\n</html>%22);document.close();}void%200",
    "description": "Opens A JavaScript REPL.",
    "icon": "",
    "date": 1602185275484,
    "time": "12:27:55:484",
    "uid": "c75149e8-573f-8ca9-551a-0b83eebb50b3",
    "id": 4
  },
  {
    "title": "JS ENV",
    "uri": "javascript:with(window.open(%22%22,%22_blank%22,%22width=%22+screen.width*.6+%22,left=%22+screen.width*.35+%22,height=%22+screen.height*.9+%22,resizable,scrollbars=yes%22)){document.write(%22<head><title>JavaScript Development Environment 2.0.1</title><!-- about:blank confuses opera.. --></head><frameset rows=\\%2225,*,*\\%22>\\n\\n  <frame name=\\%22toolbarFrame\\%22 src=\\%22about:blank\\%22 noresize=\\%22noresize\\%22>\\n\\n  <frame name=\\%22inputFrame\\%22 src=\\%22about:blank\\%22>\\n\\n  <frame name=\\%22outputFrame\\%22 src=\\%22about:blank\\%22>\\n\\n</frameset>\\n\\n%22);document.close(); frames[0].document.write(%22<head><!-- no doctype - it makes IE ignore the height: 100%25. --><title>toolbarFrame</title>\\n\\n\\n\\n<style type=\\%22text/css\\%22>\\nhtml,body { width: 100%25; height: 100%25; border: none; margin: 0px; padding: 0px; }\\nbutton { height: 100%25; }\\n</style>\\n\\n<script type=\\%22text/javascript\\%22>\\n\\nvar outputFrame = parent.outputFrame;\\nvar inputFrame = parent.inputFrame;\\nvar framesetElement = parent.document.documentElement.getElementsByTagName(\\%22frameset\\%22)[0];\\n\\nvar savedRows;\\n\\n\\n// Need to use C-style comments in handleError() and print() \\n// because IE retains them when decompiling a function.\\n\\n\\n\\nfunction print(s, c) {\\n  var outputFrame = parent.outputFrame; /* duplicated here in case this function is elsewhere */\\n  var doc = outputFrame.document;\\n\\n  var newdiv = doc.createElement(\\%22div\\%22);\\n  newdiv.appendChild(doc.createTextNode(s));\\n  if (c)\\n    newdiv.style.color = c;\\n  doc.body.appendChild(newdiv);\\n}\\n\\nfunction handleError(er, file, lineNumber) \\n{\\n  print(\\%22Error on line \\%22 + lineNumber + \\%22: \\%22 + er, \\%22red\\%22); \\n    \\n  /* Find the character offset for the line */\\n  /* (code adapted from blogidate xml well-formedness bookmarklet) */\\n  var ta = inputFrame.document.getElementById(\\%22input\\%22);\\n  var lines = ta.value.split(\\%22\\\\n\\%22);\\n  var cc = 0; \\n  var i;\\n  for(i=0; i < (lineNumber - 1); ++i) \\n    cc += lines[i].length + 1;\\n\\n  /* Hacky(?) workaround for IE's habit of including \\\\r's in strings */\\n  if (ta.value.split(\\%22\\\\r\\%22).length > 1)\\n    cc -= lineNumber - 1;\\n\\n  /* Select the line */\\n  if(document.selection) { \\n    /* IE (Leonard Lin gave me this code) */\\n    var sel = ta.createTextRange(); \\n    sel.moveStart(\\%22character\\%22, cc); \\n    sel.collapse(); \\n    sel.moveEnd(\\%22character\\%22, lines[i].length); \\n    sel.select();\\n  } else { \\n    /* Mozilla */\\n    ta.selectionStart = cc; \\n    ta.selectionEnd = cc + lines[i].length; \\n  }\\n \\n  /* return true; */ /* nah, let the error go through to IE's js consolish thing! */\\n}\\n\\n\\n\\n\\n\\nfunction showHideOutput()\\n{\\n  if (outputFrame.document.body.clientHeight > 100) {\\n    // hide\\n    savedRows = framesetElement.rows;    \\n    framesetElement.rows = \\%2225,*,0\\%22;\\n  }\\n  else {\\n    // show. use the previous size, if possible\\n    if (savedRows) {\\n      framesetElement.rows = savedRows;\\n      savedRows = null;\\n    }\\n    else {\\n      framesetElement.rows = \\%2225,*,*\\%22;\\n    }\\n  }\\n}\\n\\nfunction refocus()\\n{\\n  inputFrame.document.getElementById(\\%22input\\%22).focus();\\n}\\n\\n\\nfunction clearOutput()\\n{\\n  var b = outputFrame.document.body;\\n  while(b.firstChild)\\n    b.removeChild(b.firstChild);\\n}\\n\\nfunction stripLineBreaks(s)\\n{\\n  return s.replace(/\\\\n/g, \\%22\\%22).replace(/\\\\r/g, \\%22\\%22); // stripping \\\\r is for IE\\n}\\n\\nfunction execute()\\n{\\n  var js = inputFrame.document.getElementById(\\%22input\\%22).value;\\n\\n  var useOpener = parent.opener && !parent.opener.closed;\\n  var oldStyle = !! document.all; // lame but meh.\\n  \\n  print(\\%22Running\\%22 + (useOpener ? \\%22 in bookmarklet mode\\%22 : \\%22\\%22) + (oldStyle ? \\%22 in make-IE-happy mode\\%22 : \\%22\\%22) + \\%22...\\%22, \\%22orange\\%22);\\n\\n  if (useOpener)\\n    executeWithJSURL(js, parent.opener); // only way to execute against another frame\\n  else if (oldStyle)\\n    executeWithDW(js, execFrame); // only way to get line numbers in IE\\n  else\\n    executeWithJSURL(js, execFrame); // faster in Mozilla  \\n}\\n\\n// Advantages: can get line numbers in IE.\\nfunction executeWithDW(js, win)\\n{\\n  win.document.open();\\n  win.inputFrame = inputFrame;\\n  win.outputFrame = outputFrame;\\n  win.document.write(\\n    stripLineBreaks(\\n        '<!DOCTYPE HTML PUBLIC \\%22-//W3C//DTD HTML 4.01//EN\\%22 \\%22http://www.w3.org/TR/html4/strict.dtd\\%22>' +\\n        '<html><head><title>execFrame<\\\\/title><script type=\\%22text/javascript\\%22>'\\n      + print         // yay for decompilation!\\n      + handleError \\n      + \\%22window.onerror = handleError;\\%22\\n      + \\%22<\\\\/script><\\\\/head>\\%22\\n      ) \\n    + '<body><script type=\\%22text/javascript\\%22>'\\n    + js         // should escape it a little to remove the string <\\\\/script> at least...\\n    + \\%22<\\\\/script><\\\\/body><\\\\/html>\\%22\\n    );\\n  win.document.close();\\n}\\n\\n// Advantages: can be used to inject a script into another window, faster in Mozilla.\\nfunction executeWithJSURL(js, win)\\n{\\n  // isolate scope\\n  js = \\%22(function(){ \\%22 + js + \\%22 \\\\n })()\\%22;\\n\\n  win.print = print;\\n  win.onerror = handleError;\\n\\n  // double encodeURIComponent because javascript: URLs themselves are encoded!\\n  win.location.href = 'javascript:eval(decodeURIComponent(\\%22' + encodeURIComponent(encodeURIComponent(js)) + '\\%22)); void 0;';\\n  \\n  refocus();\\n}\\n\\n// Other ideas I haven't tried lately: create a <script> element, eval.\\n\\n\\nfunction makeUserScript(userScriptLink)\\n{\\n    userScriptLink.href = \\n        \\%22data:text/javascript;charset=utf-8,\\%22 + \\n        encodeURIComponent(inputFrame.document.getElementById(\\%22input\\%22).value + \\%22//.user.js\\%22);\\n}\\n\\n</script></head><body>\\n\\n<button accesskey=\\%22E\\%22 onclick=\\%22execute(); refocus();\\%22><u>E</u>xecute</button>\\n<!-- <button accesskey=\\%22R\\%22 onclick=\\%22reloadAndExecute(); refocus();\\%22><u>R</u>eload and execute</button> -->\\n<button accesskey=\\%22C\\%22 onclick=\\%22clearOutput(); refocus();\\%22><u>C</u>lear output</button>\\n<button accesskey=\\%22S\\%22 onclick=\\%22showHideOutput(); refocus();\\%22><u>S</u>how/hide output</button>\\n<!-- <button accesskey=\\%22H\\%22 onclick=\\%22help(); refocus();\\%22><u>H</u>elp</button> -->\\n\\n<a href=\\%22data:text/html,...\\%22 onfocus=\\%22makeUserScript(this);\\%22 onmouseover=\\%22makeUserScript(this);\\%22 target=\\%22_blank\\%22>Install as user script</a>\\n\\n<div style=\\%22visibility: hidden;\\%22>\\n<iframe name=\\%22execFrame\\%22 src=\\%22about:blank\\%22 height=\\%225\\%22 width=\\%225\\%22></iframe>\\n</div>\\n\\n</body>%22); frames[0].document.close(); frames[1].document.write(%22<head><!-- no doctype - it makes IE ignore the height: 100%25. --><title>inputFrame</title>\\n\\n\\n\\n\\n\\n<style type=\\%22text/css\\%22>\\n\\nhtml,body,form,textarea { width: 100%25; height: 100%25; border: none; margin: 0px; padding: 0px; }\\nhtml,body { overflow: hidden; }\\n\\n</style></head><body onload=\\%22document.getElementById('input').select();\\%22>\\n<textarea style=\\%22background-color: rgb(221, 238, 255);\\%22 id=\\%22input\\%22>// ==UserScript==\\n// @namespace     http://www.squarefree.com/jsenv/autogenerated\\n// @name          Unnamed script\\n// @description   Undescribed script\\n// ==/UserScript==\\n\\nprint(\\%22Squares of numbers 0 through 4:\\%22);\\nfor (var i = 0; i < 5; ++i)\\n  print(i * i);\\n\\nthis.statement.causes(an.error);\\n</textarea>\\n</body>%22); frames[1].document.close();   }void 0",
    "description": "Open A JavaScript Environment in a new window.",
    "icon": "",
    "date": 1602187078244,
    "time": "12:57:58:244",
    "uid": "b1e48440-cd5a-0583-0acc-bf21e65e67e3",
    "id": 5
  },
  {
    "title": "Test CSS",
    "uri": "javascript:(function(){function%20init(){var%20newline=unescape(%22%%22+%220A%22);dead=false;oldCSS=null;x=opener;ta=document.f.ta;ta.select();ta.value=%22/*%20Type%20CSS%20rules%20here%20and%20they%20will%20be%20applied%20to%22+newline+%22whatever%20page%20is%20loaded%20in%20that%20tab,%20as%20long%20as%20the%20pages%22+newline+%22are%20from%20'%22+location.host+%22'%22+newline+%22and%20you%20keep%20this%20window%20open.%20*/%22+newline+newline;update();}function%20update(){try{if(!x||x.closed){ta.style.backgroundColor=%22#ddd%22;return;}x.bookmarkletStyleSheet;}catch(er){ta.style.backgroundColor=%22#fdc%22;setTimeout(update,150);dead=true;return;}if(dead){dead=false;ta.style.backgroundColor=%22%22;oldCSS=null;}if(!x.testStyles){var%20newSS;newSS=x.document.createElement(%22link%22);newSS.rel=%22stylesheet%22;newSS.type=%22text/css%22;x.document.getElementsByTagName(%22head%22)[0].appendChild(newSS);x.testStyles=newSS;oldCSS=null;}if(oldCSS!=ta.value){oldCSS=ta.value;if(window.opera)x.testStyles.href=%22javascript:unescape('%22+escape(ta.value)+%22')%22;else%20if(navigator.userAgent.indexOf(%22MSIE%22)!=-1)x.testStyles.href=%22javascript:unescape('%22+escape(escape(ta.value))+%22')%22;else%20x.testStyles.href=%22data:text/css,%22+escape(ta.value);}setTimeout(update,150);}y=window.open('','','resizable,width=500,height=300');y.document.write('%3Ctitle%3ENew%20CSS%20Style%20Sheet%3C/title%3E%3Cstyle%3E.ec%20{%20width:%20100%;%20height:%20100%;%20border:%20none;%20margin:%200px;%20padding:%200px;%20}%3C/style%3E%3Cbody%20class=%22ec%22%3E%3Cform%20name=%22f%22%20style=%22margin:%200px;%22%20class=%22ec%22%3E%3Ctextarea%20name=%22ta%22%20wrap=%22soft%22%20style=%22margin:%200px;%20border:%200px;%20width:100%;%20height:100%;%22%20class=%22ec%22%3E%3C/textarea%3E%3Cscript%3E'+update+init+'init();%3C'+'/script%3E');y.document.close();})()",
    "description": "Opens a window to write css and run on the page.",
    "icon": "",
    "date": 1602185729695,
    "time": "12:35:29:695",
    "uid": "3777421a-163b-503a-5027-b9e0cef78f4b",
    "id": 6
  },
  {
    "title": "View CSS",
    "uri": "javascript:s=document.getElementsByTagName('STYLE');%20ex=document.getElementsByTagName('LINK');%20d=window.open().document;%20/*set%20base%20href*/d.open();d.close();%20b=d.body;%20function%20trim(s){return%20s.replace(/^\\s*\\n/,%20'').replace(/\\s*$/,%20'');%20};%20function%20iff(a,b,c){return%20b?a+b+c:'';}function%20add(h){b.appendChild(h);}%20function%20makeTag(t){return%20d.createElement(t);}%20function%20makeText(tag,text){t=makeTag(tag);t.appendChild(d.createTextNode(text));%20return%20t;}%20add(makeText('style',%20'iframe{width:100%;height:18em;border:1px%20solid;'));%20add(makeText('h3',%20d.title='Style%20sheets%20in%20'%20+%20location.href));%20for(i=0;%20i%3Cs.length;%20++i)%20{%20add(makeText('h4','Inline%20style%20sheet'%20+%20iff('%20title=%22',s[i].title,'%22')));%20add(makeText('pre',%20trim(s[i].innerHTML)));%20}%20for%20(i=0;%20i%3Cex.length;%20++i)%20{%20rs=ex[i].rel.split('%20');%20for(j=0;j%3Crs.length;++j)%20if%20(rs[j].toLowerCase()=='stylesheet')%20{%20add(makeText('h4','link%20rel=%22'%20+%20ex[i].rel%20+%20'%22%20href=%22'%20+%20ex[i].href%20+%20'%22'%20+%20iff('%20title=%22',ex[i].title,'%22')));%20iframe=makeTag('iframe');%20iframe.src=ex[i].href;%20add(iframe);%20break;%20}%20}%20void%200",
    "description": "Open a new window with frames to read stylesheets that are currently loaded",
    "icon": "",
    "date": 1602185732667,
    "time": "12:35:32:667",
    "uid": "264d12c4-1b10-7a52-b575-dbded3b09b67",
    "id": 7
  },
  {
    "title": "DOM Browser",
    "uri": "javascript:(function(){W=open('','','width=500,height=550,resizable,status');W.document.writeln('<script language=JavaScript src=\\'https://assets.codepen.io/1674766/dom-browser.js\\'></script>');})()",
    "description": "Object Viewer for the Document.",
    "icon": "",
    "date": 1602185750165,
    "time": "12:35:50:165",
    "uid": "46ce1ceb-3938-8901-c27f-7a3cc1020d3f",
    "id": 8
  }
]
